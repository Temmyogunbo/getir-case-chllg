{"version":3,"sources":["types/index.ts","selectors/orders/index.ts","constants/index.ts","actions/index.ts","components/Orders/useOrders.tsx","components/layouts/Header/index.tsx","components/layouts/Footer/index.tsx","components/CheckBox/index.tsx","components/Sort/index.tsx","components/Sort/useSort.tsx","components/Order/index.tsx","components/Orders/index.tsx","components/Product/index.tsx","selectors/products/index.ts","components/Products/useProducts.tsx","components/common/Loader/index.tsx","components/Products/index.tsx","components/Brand/index.tsx","components/SearchInput/index.tsx","selectors/companies/index.ts","selectors/brand/index.ts","utils/search.ts","components/Brands/useBrands.tsx","components/Brands/index.tsx","components/Tag/index.tsx","selectors/tag/index.ts","components/Tags/useTags.tsx","components/Tags/index.tsx","components/Pagination/index.tsx","App.tsx","selectors/sort/index.ts","selectors/page/index.ts","selectors/itemType/index.ts","config/env.ts","lib/generateProductUrl.ts","sagas/productSaga.ts","sagas/companySaga.ts","sagas/index.ts","reducers/companyReducer.ts","reducers/rootReducer.ts","reducers/productReducer.ts","reducers/tagReducer.ts","reducers/sortReducer.ts","reducers/brandReducer.ts","reducers/pageReducer.ts","reducers/orderReducer.ts","reducers/itemTypeReducer.ts","store/index.ts","index.tsx"],"names":["CheckBoxType","ProductType","SortBy","Tags","ItemTypes","getOrders","state","orderReducer","orders","GET_PRODUCTS","PRODUCTS_RECEIVED","PRODUCTS_FAILED","GET_COMPANIES","COMPANIES_RECEIVED","COMPANIES_FAILED","SET_TAGS","SET_ALL_TAGS","SET_BRANDS","SET_ALL_BRANDS","SET_SORT","SET_PAGE_NUMBER","SET_ORDER","INCREMENT_ORDER","DECREMENT_ORDER","SET_ITEM_TYPE","getProducts","type","setSort","sort","incrementOrder","order","useOrders","useSelector","dispatch","useDispatch","models","operations","handleDecrementOrder","decrementOrder","handleIncrementOrder","totalOrder","reduce","accum","currVal","Number","price","count","Header","showTotalOrder","className","src","alt","style","backgroundColor","Footer","Date","getFullYear","RadioCheckBox","checked","SquareCheckBox","Checkbox","Radio","Sort","useState","sortBy","setSortBy","handleSort","selectedSortBy","useSort","onClick","PRICE_LOW_TO_HIGH","PRICE_HIGH_TO_LOW","NEW_TO_OLD","OLD_TO_NEW","Order","slug","Orders","length","map","index","Product","product","name","productReducer","products","useProducts","handleSetProduct","filter","setOrder","handleSetItemType","itemType","setItemType","getProductsAction","Loading","Products","isEmpty","Mug","Shirt","Brand","brand","handleBrand","handleBrandCount","Square","SearchInput","searchValue","placeholder","handleChange","value","onChange","getCompanies","companyReducer","companies","getSelectedBrands","brandReducer","brands","search","key","searchBox","item","toLowerCase","includes","useBrands","selectedBrands","getStateProducts","setBrandss","setSearchValue","useEffect","handleSearch","event","target","newBrands","compact","setAllBrands","getBrandsSlug","setBrands","countBrand","manufacturer","isBrandSelected","Brands","Fragment","Tag","tag","handleTag","handleTagCount","getSelectedTags","tagReducer","tags","TagLists","Object","values","useTags","selectedTags","setTagss","setAllTags","setTags","countTag","productTags","flatten","productTag","uniq","isTagSelected","useStyles","makeStyles","theme","root","marginTop","spacing","PaginationControlled","classes","React","page","setPage","Pagination","setPageNumber","shape","color","boundaryCount","App","getSort","sortReducer","getPage","pageReducer","getItemType","itemTypeReducer","API_URL","env","get","asString","PAGE_SIZE","generateProductURL","sortOrder","getSortOder","jointTags","join","jointBrands","sortQuery","tagQuery","brandsQuery","itemTypeQuery","fetchProducts","watchProducts","axios","action","select","call","response","put","data","parseInt","message","takeLatest","fetchCompanies","watchCompanies","rootSaga","all","appReducer","combineReducers","loading","filteredTags","filteredBrands","initialState","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3f41a582.chunk.js","sourcesContent":["export enum CheckBoxType {\n  Radio = 'Radio',\n  Square = 'Square',\n}\n\nexport enum  ProductType {\n  mug = 'mug',\n  shirt = 'shirt'\n}\n\nexport interface IProduct {\n  price: string;\n  name: string;\n  description: string;\n  manufacturer: string;\n  itemType: ProductType;\n  tags: string[];\n  added: number;\n  slug: string;\n}\n\nexport interface ICompany {\n  slug: string;\n  name: string;\n  address: string;\n  city: string;\n  state: string;\n  zip: string;\n  account: number;\n  contact: string;\n}\n\nexport enum SortBy {\n  PRICE_LOW_TO_HIGH = 'PRICE_LOW_TO_HIGH',\n  PRICE_HIGH_TO_LOW = 'PRICE_HIGH_TO_LOW',\n  NEW_TO_OLD = 'NEW_TO_OLD',\n  OLD_TO_NEW = 'OLD_TO_NEW',\n}\n\nexport interface IOrder extends IProduct{\n\n  count?: number;\n}\n\nexport interface IInitialState {\n  orderReducer: null | any;\n  tagReducer: null | any;\n  productReducer: null | any;\n  companyReducer: null | any;\n  brandReducer: null | any;\n  sortReducer: null | any;\n  pageReducer: null | any;\n\n\n}\n\nexport enum Tags {\n  All = 'All',\n  Trees = 'Trees',\n  Beach =  'Beach',\n  Ocean = 'Ocean',\n  Water = 'Water',\n  Animal = 'Animal',\n  Bear = 'Bear',\n  Road =  'Road',\n  Rocks =  'Rocks',\n  Sunset =  'Sunset',\n  Rust =  'Rust',\n  Old =  'Old',\n  Car =  'Car',\n  Coffee =  'Coffee',\n  Fog =  'Fog',\n  People =  'People',\n  Dock = 'Dock',\n  Person = 'Person',\n  Hills =  'Hills',\n  Animals =  'Animals',\n  Sheep =  'Sheep',\n  Lake =  'Lake',\n  Building =  'Building',\n  Metal  = 'Metal',\n  Woman = 'Woman',\n}\n\nexport enum ItemTypes {\n  Shirt = 'shirt',\n  Mug = 'mug',\n}","export const getOrders= (state: any) => state.orderReducer.orders;\n","export const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const PRODUCTS_RECEIVED = 'PRODUCTS_RECEIVED';\nexport const PRODUCTS_FAILED = 'GET_PRODUCTS_FAILED';\n\nexport const GET_COMPANIES = 'GET_COMPANIES';\nexport const COMPANIES_RECEIVED = 'COMPANIES_RECEIVED';\nexport const COMPANIES_FAILED = 'COMPANIES_FAILED';\n\nexport const SET_TAGS = 'SET_TAGS';\nexport const SET_ALL_TAGS = 'SET_ALL_TAGS';\n\nexport const REMOVE_TAG = 'REMOVE_TAG';\n\nexport const SET_BRANDS = 'SET_BRANDS';\nexport const SET_ALL_BRANDS = 'SET_ALL_BRANDS';\n\nexport const SET_SORT = 'SET_SORT';\n\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\n\nexport const SET_ORDER = 'SET_ORDER';\nexport const INCREMENT_ORDER = 'INCREMENT_ORDER';\nexport const DECREMENT_ORDER = 'DECREMENT_ORDER';\n\nexport const SET_ITEM_TYPE = 'SET_ITEM_TYPE';\n","import {\n  GET_PRODUCTS,\n  GET_COMPANIES,\n  COMPANIES_RECEIVED,\n  COMPANIES_FAILED,\n  PRODUCTS_RECEIVED,\n  PRODUCTS_FAILED,\n  SET_BRANDS,\n  SET_PAGE_NUMBER,\n  SET_SORT,\n  SET_TAGS,\n  SET_ORDER,\n  INCREMENT_ORDER,\n  DECREMENT_ORDER,\n\n  SET_ALL_TAGS,\n  SET_ALL_BRANDS,\n  SET_ITEM_TYPE\n} from '../constants';\nimport { IProduct, ICompany, IOrder, ItemTypes} from '../types';\n\nexport const getProducts = () => ({\n  type: GET_PRODUCTS,\n});\n\n\nexport const getProductsSuccess = (products: IProduct) => ({\n  type: PRODUCTS_RECEIVED,\n  products,\n});\n\nexport const getProductsFailure = (message: string) => ({\n  type: PRODUCTS_FAILED,\n  message\n});\n\nexport const getCompanies = () => ({\n  type: GET_COMPANIES,\n});\n\n\nexport const getCompaniesSuccess = (companies: ICompany) => ({\n  type: COMPANIES_RECEIVED,\n  companies,\n});\n\n\nexport const getCompaniesFailure = (message: string) => ({\n  type: COMPANIES_FAILED,\n  message\n});\n\nexport const setTags = (tag: string) => ({\n  type: SET_TAGS,\n  tag,\n});\n\n\nexport const setAllTags = (tags: string[]) => ({\n  type: SET_ALL_TAGS,\n  tags,\n});\n\nexport const setBrands = (brand: string) => ({\n  type: SET_BRANDS,\n  brand,\n})\n\nexport const setAllBrands = (brands: string[]) => ({\n  type: SET_ALL_BRANDS,\n  brands,\n});\n\nexport const setSort = (sort: string) => ({\n  type: SET_SORT,\n  sort,\n})\n\nexport const setPageNumber = (page: number) => ({\n  type: SET_PAGE_NUMBER,\n  page,\n})\n\nexport const setOrder = (order: IOrder) => ({\n  type: SET_ORDER,\n  order: {\n    ...order,\n    count: 1,\n  },\n})\n\nexport const incrementOrder = (order: IOrder) => ({\n  type: INCREMENT_ORDER,\n  order,\n})\n\nexport const decrementOrder = (order: IOrder) => ({\n  type: DECREMENT_ORDER,\n  order,\n})\n\nexport const setItemType = (itemType: ItemTypes) => ({\n  type: SET_ITEM_TYPE,\n  itemType,\n})","import { useSelector, useDispatch } from 'react-redux';\nimport { getOrders } from '../../selectors/orders';\nimport { incrementOrder, decrementOrder } from '../../actions';\nimport { IOrder } from '../../types';\n\nexport const useOrders = () => {\n  const orders = useSelector(getOrders);\n  const dispatch = useDispatch()\n\n  const handleIncrementOrder = (order: IOrder) => dispatch(incrementOrder(order))\n  const handleDecrementOrder = (order: IOrder) => dispatch(decrementOrder(order))\n\n  const totalOrder = (orders: IOrder[]) => {\n    return orders.reduce((accum, currVal) => accum + Number(currVal.price) * currVal.count!, 0)\n  }\n  return { models: { orders }, operations: { handleDecrementOrder, handleIncrementOrder, totalOrder }}\n}","import { useOrders } from '../../Orders/useOrders';\n\nexport const Header = () => {\n  const { models, operations } = useOrders();\n\n  const { orders } = models;\n  const  { totalOrder } = operations;\n  \n  const showTotalOrder = totalOrder(orders) > 0\n\n  return (\n    <>\n      <div className=\"w-6/12 flex justify-end relative\">\n      <img className=\"Header-logo\" src=\"/icons/market.svg\" alt=\"Logo\" />\n      </div>\n      {\n        showTotalOrder &&\n      <div className=\"w-6/12 flex justify-end absolute top-0 right-0\" >\n        <span className=\"font-sans text-xs mr-32 flex py-5 px-4\" style={{ backgroundColor: '#147594'}}>\n          <span>\n\n      <img className=\"Header-logo\" src=\"/icons/lock.svg\" alt=\"Logo\" />\n          </span>\n          \n<span className=\"text-white font-normal text-lg\">\n      {totalOrder(orders)}\n\n</span>\n        </span>\n      </div>}\n    </>\n  )\n}","export const Footer = () => (\n    <div className=\"flex justify-center text-blue-400 font-normal\">\n      <span>\n        C {new Date().getFullYear()}Market\n      </span>\n      <span>      <img className=\"Header-logo\" src=\"/icons/full-stop.svg\" alt=\"fullstop\" />\n</span>\n<span>\n  Privacy Policy\n</span>\n    </div>\n  )","import { CheckBoxType } from '../../types';\n\nexport const RadioCheckBox = ({ checked }: {checked: boolean }) => {\n  return (\n    <div>\n      {checked ?  <img className=\"Header-logo\" src=\"/icons/radio-check-box-on.svg\" alt=\"Logo\" /> \n        : <img className=\"Header-logo\" src=\"/icons/radio-check-box-off.svg\" alt=\"Logo\" />}\n    </div>\n  )\n}\n\nexport const SquareCheckBox = ({ checked }: {checked: boolean }) => {\n  return (\n    <div>\n        {checked ?  <img className=\"Header-logo\" src=\"/icons/square-check-box-on.svg\" alt=\"Logo\" />\n        : <img className=\"Header-logo\" src=\"/icons/square-check-box-off.svg\" alt=\"Logo\" />}\n    </div>\n  )\n}\n\nexport const Checkbox = ({ checked, type }: { checked: boolean; type: CheckBoxType }) => {\n  return (\n    <div className=\"inline-block align-middle\">\n      {type === CheckBoxType.Radio ? <RadioCheckBox checked={checked} /> : <SquareCheckBox checked={checked} />}\n    </div>\n  );\n};\n","import {  Checkbox} from '../CheckBox';\nimport { CheckBoxType } from '../../types';\nimport { useSort } from './useSort';\nimport { SortBy } from '../../types';\n\nexport const Sort = () => {\n  const { models, operations} = useSort();\n  \n  const { sortBy } = models;\n  const { handleSort } = operations;\n\n  return (\n    <div className=\"px-2 py-4\">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-base\">Sorting</h3>\n      <ul className=\"bg-white py-4\">\n        <li className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\" onClick={() => handleSort(SortBy.PRICE_LOW_TO_HIGH)}>\n          <span className=\"m-2\">\n            <Checkbox checked={SortBy.PRICE_LOW_TO_HIGH === sortBy} type={CheckBoxType.Radio} />\n          </span> Price low to high\n        </li>\n        <li  className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\" onClick={() => handleSort(SortBy.PRICE_HIGH_TO_LOW)}>\n        <span className=\"m-2\">\n            <Checkbox checked={SortBy.PRICE_HIGH_TO_LOW === sortBy} type={CheckBoxType.Radio} />\n          </span> Price high to low\n        </li>\n        <li  className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\" onClick={() => handleSort(SortBy.NEW_TO_OLD)}>\n        <span className=\"m-2\">\n            <Checkbox checked={SortBy.NEW_TO_OLD === sortBy} type={CheckBoxType.Radio} />\n          </span> New to old\n        </li>\n        <li  className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\" onClick={() => handleSort(SortBy.OLD_TO_NEW)}>\n        <span className=\"m-2\">\n            <Checkbox checked={SortBy.OLD_TO_NEW === sortBy} type={CheckBoxType.Radio} />\n          </span> Old to new\n        </li>\n      </ul>\n    </div>\n  )\n}","import { useState } from 'react'\nimport { SortBy } from '../../types';\nimport { useDispatch } from 'react-redux'\nimport { setSort, getProducts } from '../../actions';\n\nexport const useSort = () => {\n  const [sortBy, setSortBy] = useState('');\n  const dispatch = useDispatch()\n\n  const handleSort = (selectedSortBy: SortBy) => {\n    if(sortBy === selectedSortBy) {\n      setSortBy('')\n      dispatch(setSort(''))\n    } else {\n      setSortBy(selectedSortBy);\n      dispatch(setSort(selectedSortBy))\n    }\n    dispatch(getProducts())\n\n  }\n\n  return { models: { sortBy,  }, operations: { handleSort }}\n}","import { IOrder } from '../../types';\n\nexport const Order = ({ order, handleDecrementOrder, handleIncrementOrder }: {order: IOrder, handleDecrementOrder: any; handleIncrementOrder: any; }) => (\n    <div className=\"flex flex-row p-2 justify-between border-b-2\">\n      <div className=\"p-2\">\n  <h3 className=\"text-gray-600 text-base font-medium\">{order.slug}</h3>\n      <span className=\"text-blue-400 font-semibold\">{order.price}</span>\n\n      </div>\n      <div className=\"flex flex-row cursor-pointer\">\n\n      <img className=\"\" src=\"/icons/minus.svg\" alt=\"minus\"   onClick={() => handleDecrementOrder(order)}/>\n\n<button className=\"bg-blue-400 p-4 text-white font-semibold mx-2 \">{order.count}</button>\n\n      <img className=\"\" src=\"/icons/plus.svg\" alt=\"plus\"onClick={() => handleIncrementOrder(order)} />\n\n      </div>\n    </div>\n)","import { Order } from '../Order';\nimport { useOrders } from './useOrders';\nexport const Orders = () => {\n  const { models, operations } = useOrders();\n  const { orders } = models;\n  \n  const  { handleDecrementOrder, handleIncrementOrder, totalOrder } = operations;\n\n  if(orders.length === 0) return null;\n\n  return (\n    <div className=\"border-8 border-blue-400 bg-white p-2 \">\n\n    <div className=\"h-80 overflow-y-scroll\">\n      {\n        orders.map((order: any, index: number) => (\n          <Order order={order} key={`ord-${index}`} handleDecrementOrder={handleDecrementOrder} handleIncrementOrder={handleIncrementOrder} />\n        ))\n      }\n    </div>\n    <div className=\"flex justify-end mb-2 mt-4\">\n\n    <button className=\"border-2 border-blue-400 p-3 text-blue-400 font-semibold\">{totalOrder(orders)}</button>\n    </div>\n    </div>\n  )\n}","import { IProduct } from '../../types';\n\nexport const Product = ({ product }: { product: IProduct }) => (\n  <div className=\"w-32 p-4\">\n    <div className=\"p-4 bg-gray-100 rounded-md\">\n      <img className=\"\" src=\"/icons/product.jpeg\" alt=\"Product\" />\n    </div>\n    <div>\n    <div className=\" p-2\">\n      <span className=\"text-blue-400 font-semibold\">\n       {product.price}\n      </span>\n    </div>\n    <div > \n      <span className=\"text-gray-900 font-semibold leading-3 text-sm\">{product.name}</span>\n    </div>\n\n    </div>\n  </div>\n)","\nexport const getProducts = (state: any) => state.productReducer.products\nexport const getItemTypes = (state: any) => getProducts(state).map((product: any) => product.itemType)","import { IProduct, IOrder, ItemTypes } from '../../types';\nimport { useSelector, useDispatch} from 'react-redux'\nimport { getProducts, getItemTypes } from '../../selectors/products';\nimport { getOrders } from '../../selectors/orders';\nimport { setOrder, incrementOrder, setItemType, getProducts as getProductsAction } from '../../actions';\n\nexport const useProducts = () => {\n  const products = useSelector(getProducts);\n  const orders = useSelector(getOrders);\n\n  const dispatch = useDispatch();\n\n  const handleSetProduct = (product: IProduct) => {\n    if(orders.length !== 0) {\n      const order = orders.filter(({ slug }: IOrder) => slug === product.slug);\n      const hasOrder = order.length !== 0;\n\n      if(hasOrder) {\n        dispatch(incrementOrder(product));\n        return\n      }\n    }\n    dispatch(setOrder(product))\n  }\n\n  const handleSetItemType = (itemType: ItemTypes) => {\n    dispatch(setItemType(itemType));\n    dispatch(getProductsAction())\n  }\n\n  return { models: { products, }, operations: { handleSetProduct, handleSetItemType }}\n}","import React, { FunctionComponent } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nexport \nconst Loading: FunctionComponent = () => (\n  <div className=\"w-full h-1/3 flex justify-center items-center\">\n    <FaSpinner className=\"absolute mt-36 animate-spin h-10 w-10 text-primary\" />\n  </div>\n);\n\n","import { Product } from '../Product';\nimport { IProduct, ItemTypes } from '../../types';\nimport { useProducts } from './useProducts';\nimport { Loading } from '../common/Loader';\nimport isEmpty from 'lodash.isempty';\n\nexport const Products = () => {\n  const { models, operations } = useProducts();\n  const { products} = models;\n  const { handleSetProduct, handleSetItemType } = operations;\n\n  if(isEmpty(products)) return (<Loading />)\n\n  return (\n    <div className=\"px-2 py-4 \">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-lg\">Products</h3>\n      <div className=\"p-2 mb-2\">\n        <button className=\"bg-blue-400 mr-2 px-4 py-1 font-semibold rounded-sm text-white\" onClick={() => handleSetItemType(ItemTypes.Mug)}>{ItemTypes.Mug}</button>\n        <button className=\"bg-pink-100 px-4 py-1 font-normal rounded-sm text-blue-400\" onClick={() => handleSetItemType(ItemTypes.Shirt)}>{ItemTypes.Shirt}</button>\n      </div>\n    <div className=\"flex flex-wrap justify-center align-center p-4 bg-white\">\n\n      {\n      products?.map((product: IProduct, index: number) => {\n      return (\n        <div key={`${product.name}-${index}`} className=\"\">\n        <Product product={product}  />\n        <div className=\"p-4\">\n\n        <button className=\"bg-blue-400 w-full rounded text-white font-medium\" onClick={() => handleSetProduct(product)}>Add</button>\n        </div>\n        </div>\n      )\n    })\n      }\n    </div>\n    </div>\n  )\n}","import {  Checkbox} from '../CheckBox';\nimport { CheckBoxType, ICompany } from '../../types';\n\nexport const Brand = ({ brand, checked, handleBrand, handleBrandCount }: { brand: ICompany; count?: number; checked: boolean; handleBrand: any; handleBrandCount: any}) => (\n    <li className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\" onClick={() => handleBrand(brand)}>\n          <span className=\"m-2 \">\n            <Checkbox checked={checked} type={CheckBoxType.Square} />\n          </span> \n          <span>\n          {brand.name} ({handleBrandCount(brand)})\n          </span>\n        </li>\n  )","export const SearchInput = ({ searchValue, placeholder, handleChange}: { searchValue: string; placeholder: string; handleChange: any; } ) => {\n  return (\n  <div>\n    <input\n      name=\"searchTerm\"\n      value={searchValue}\n      className=\"pl-12 w-full h-12 border focus:bg-white border-primary focus:border-primary focus:outline-none\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  </div>\n);}","export const getCompanies = (state: any) => state.companyReducer.companies\n","export const getSelectedBrands = (state: any) => state.brandReducer.brands;\n","export const search = (searchValue: string, key?: string) => ( searchBox: string[]) => {\n  if(!searchValue) return ([]);\n\n  return searchBox.map(item => {\n    if(key) {\n      if(item.toLowerCase().includes(searchValue.toLowerCase())) return item\n    }\n    if(item.toLowerCase().includes(searchValue.toLowerCase())) return item\n\n  });\n}","import {useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ICompany, IProduct } from '../../types';\nimport compact from 'lodash.compact';\nimport { setBrands, getProducts, setAllBrands } from '../../actions';\nimport { useDispatch } from 'react-redux'\nimport { getCompanies } from '../../selectors/companies';\nimport { getProducts as getStateProducts } from '../../selectors/products';\nimport { getSelectedBrands } from '../../selectors/brand';\nimport { search } from '../../utils/search';\n\n// export const searchBrands = (searchValue: string) => ( brands: ICompany[]) => {\n//   if(!searchValue) return ([]);\n\n//   return brands.map(brand => {\n//     if(brand.name.toLowerCase().includes(searchValue.toLowerCase())) return brand;\n//     return null;\n//   });\n// }\n\nconst getBrandsSlug = (companies: ICompany[]) => companies.map(({ slug }) => slug);\n\n\nexport const useBrands = () => {\n  const companies = useSelector(getCompanies);\n  const selectedBrands = useSelector(getSelectedBrands);\n  const products = useSelector(getStateProducts);\n\n  const [brands, setBrandss] = useState<undefined | ICompany[]>([]);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if(companies) {\n      setBrandss([{ slug: 'All', name: 'All'}, ...companies])\n    }\n  },[companies])\n\n  const isBrandSelected = (brand: string) =>{\n    return selectedBrands.includes(brand)\n  } \n\n  const handleBrand = (brand: ICompany) => {\n\n    if(brand.slug === 'All') {\n      dispatch(setAllBrands(getBrandsSlug([{ slug: 'All', name: 'All'},...companies])))\n    } else {\n      dispatch(setBrands(brand.slug))\n    }\n    dispatch(getProducts())\n  }\n\n  const handleSearch = (event: any) => { \n    const value = event.target.value;\n\n    setSearchValue(value);\n    if(brands) {\n      if(value) {\n        const newBrands = search(value, 'name')(companies);\n        // @ts-ignore\n        setBrandss(compact([...newBrands]))\n      } \n      else {\n        setBrandss(companies)\n      }\n    } \n  }\n\n  const countBrand = (brand: ICompany) =>  {\n    const brands = products.filter((product: IProduct) => product.manufacturer === brand.slug);\n\n    if(brand.slug === 'All') return products.length;\n\n    return brands.length\n  }\n\n  return { operations: { handleSearch, handleBrand , countBrand, isBrandSelected }, models: { brands, searchValue }}\n}","import { Brand } from '../Brand';\nimport React from 'react';\nimport { SearchInput } from '../SearchInput';\nimport { useBrands } from './useBrands';\nimport { Loading } from '../common/Loader';\n\nexport const Brands = () => {\n  const { models, operations} = useBrands();\n\n  const { brands, searchValue } = models;\n  const {handleSearch, handleBrand, countBrand, isBrandSelected } = operations\n\n  if(brands && brands?.length <= 1) return (<Loading />)\n\n  return (\n    <div className=\" px-2 py-4 mt-10\">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-base\">Brands</h3>\n      <div className=\"bg-white py-4\">\n      <SearchInput searchValue={searchValue} placeholder=\"Search Brand\" handleChange={handleSearch} />\n      {brands && \n      <ul className=\"h-64 overflow-y-scroll\">\n        {brands?.map((brand, index) => (\n          <React.Fragment key={`${brand}-${index}`}>\n          <Brand brand={brand} checked={isBrandSelected(brand.slug)} handleBrand={handleBrand} handleBrandCount={countBrand} />\n          </React.Fragment>\n        ))}\n      </ul>}\n      </div>\n    </div>\n  )\n}","import {  Checkbox} from '../CheckBox';\nimport { CheckBoxType } from '../../types';\n\nexport const Tag = ({ tag , checked, handleTag, count, handleTagCount}: { tag: string; checked: boolean; handleTag: any; count?: number; handleTagCount: any}) => (\n    <li className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\" onClick={() => handleTag(tag)}>\n    <span className=\"m-2 \">\n      <Checkbox checked={checked} type={CheckBoxType.Square} />\n    </span> {tag} ({handleTagCount(tag)})\n  </li>\n  )","export const getSelectedTags = (state: any) => state.tagReducer.tags;\n","import { useSelector } from 'react-redux'\nimport {  IProduct, Tags } from '../../types';\nimport { useState } from 'react'\nimport compact from 'lodash.compact';\nimport flatten from 'lodash.flatten';\nimport uniq from 'lodash.uniq';\nimport { useDispatch } from 'react-redux'\nimport { setTags, getProducts, setAllTags} from '../../actions';\nimport { getSelectedTags } from '../../selectors/tag';\nimport { getProducts as getStateProducts } from '../../selectors/products';\nimport { search } from '../../utils/search';\n\nconst TagLists = Object.values(Tags);\n\nexport const useTags = () => {\n  const selectedTags = useSelector(getSelectedTags);\n  const products = useSelector(getStateProducts);\n\n  const [tags, setTagss] = useState<string[]>(TagLists);\n  const [searchValue, setSearchValue] = useState<string>('')\n\n  const dispatch = useDispatch()\n\n  const isTagSelected = (tag: string) => selectedTags.includes(tag);\n\n  const handleTag = (tag: string) => {\n    if(tag === 'All') {\n      dispatch(setAllTags(TagLists))\n    } else {\n      dispatch(setTags(tag))\n    }\n    dispatch(getProducts())\n\n  }\n\n  const handleSearch = (event: any) => { \n    const value = event.target.value;\n\n    setSearchValue(value);\n    if(tags) {\n      if(value) {\n        const newBrands = search(value)(TagLists);\n        setTagss(compact([...newBrands]))\n      } \n      else {\n        setTagss(TagLists)\n      }\n    } \n\n  }\n\n  const countTag = (tag: string) => {\n    const productTags = flatten(products.map((product: IProduct) => product.tags));\n\n    const tags = productTags.filter((productTag) => productTag === tag);\n\n    if(tag === 'All') return productTags.length - uniq(productTags).length;\n\n    return tags.length\n  }\n\n  return {models: { tags, searchValue }, operations: { handleSearch, handleTag, countTag, isTagSelected }}\n}","import { SearchInput } from '../SearchInput';\nimport { Tag } from '../Tag';\nimport React from 'react'\nimport { useTags } from './useTags';\n\n\nexport const Tags = () => {\n  const {models: { tags, searchValue }, operations: { handleSearch, handleTag, countTag, isTagSelected }} = useTags();\n  \n  return (\n    <div className=\"px-2 py-4\">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-base\">Tags</h3>\n      <div className=\"bg-white py-4\">\n      <SearchInput searchValue={searchValue} placeholder=\"Search Tag\" handleChange={handleSearch} />\n      <ul className=\"h-64 overflow-y-scroll\">\n        {tags.map((tag, index) => (\n        <React.Fragment key={`${tag}-${index}`}>\n          <Tag  tag={tag} checked={isTagSelected(tag)} handleTag={handleTag} handleTagCount={countTag} />\n          </React.Fragment>\n\n        ))}\n      </ul>\n      </div>\n    </div>\n  )\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport { setPageNumber, getProducts } from '../../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(12),\n    },\n  },\n}));\n\nexport default function PaginationControlled() {\n  const count = useSelector((state: any) => state.productReducer.count);\n  const dispatch = useDispatch()\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const handleChange = (event: any, value: any) => {\n    setPage(value);\n    dispatch(setPageNumber(value))\n    dispatch(getProducts())\n\n  };\n\n  return (\n    <div className={classes.root}>\n      <Pagination count={count} page={page} onChange={handleChange} shape=\"rounded\" color=\"primary\" boundaryCount={4}/>\n    </div>\n  );\n}","import { Header } from './components/layouts/Header';\nimport { Footer } from './components/layouts/Footer';\nimport { Sort } from './components/Sort';\nimport { Orders } from './components/Orders';\nimport { Products } from './components/Products';\nimport { getProducts, getCompanies } from './actions';\nimport {  useEffect} from 'react';\nimport { useDispatch } from 'react-redux'\nimport { Brands } from './components/Brands';\nimport { Tags } from './components/Tags';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(getProducts())\n    dispatch(getCompanies())\n  }, [])\n\n  return ( \n    <div className=\"grid grid-cols-12 gap-2  bg-gray-50\">\n      <header className=\"row-auto col-span-12 bg-blue-400 py-3 flex\">\n\n      <Header />\n      </header>\n\n          <aside className=\"col-span-3 xl:col-span-3 row-span-4 px-4 hidden lg:block\">\n            <Sort />\n            <Brands />\n            <Tags />\n            </aside>\n          <main className=\"col-span-2 md:col-span-7 lg:col-span-6 xl:col-span-6 bg-transparent row-span-4 flex flex-wrap align-center\">\n            <Products />\n            <Pagination />\n        </main>\n\n          <aside className=\"col-span-5 lg:col-span-3 xl:col-span-3  row-span-4 px-4\">\n            <Orders />\n          </aside>\n      <footer className=\"row-auto col-span-12 p-8\">\n\n      <Footer />\n      </footer>\n      </div>\n    );\n}\n\nexport default App;\n","export const getSort = (state: any) => state.sortReducer.sort;","export const getPage = (state: any) => state.pageReducer.page;\n","export const getItemType= (state: any) => state.itemTypeReducer.itemType;\n","import env from 'env-var'\n\nexport const API_URL = env.get('REACT_APP_API_URL').asString();\nexport const PAGE_SIZE = env.get('REACT_APP_PAGE_SIZE').asString()","import { API_URL, PAGE_SIZE } from '../config/env';\nimport { SortBy } from '../types';\n\nconst getSortOder = (sort: string) => {\n  if (sort) {\n    if(sort === SortBy.PRICE_HIGH_TO_LOW) {\n      return ['price', 'desc']\n    } else if(sort === SortBy.PRICE_LOW_TO_HIGH) {\n      return ['price', 'asc']\n    } else if(sort === SortBy.NEW_TO_OLD) {\n      return ['added', 'desc']\n    } else if(sort === SortBy.OLD_TO_NEW) {\n      return ['added', 'asc']\n    }\n  }\n  return ''\n}\n\nexport const generateProductURL = ({ tags, brands, page, sort, itemType }: { tags: string[]; brands: string[]; page: number; sort: string; itemType: string }) => {\n  const sortOrder = getSortOder(sort);\n\n  const jointTags = tags.filter((tag) => tag !== 'All').map((tag) => `&tags_like=${tag}`).join('')\n  const jointBrands = brands.filter((brand) => brand !== 'All').map((brand) => `&manufacturer=${brand}`).join('')\n\n  const sortQuery = sortOrder ? `&_sort=${sortOrder[0]}&_order=${sortOrder[1]}` : ''\n  const tagQuery = tags.length === 0 ? '': jointTags;\n  const brandsQuery = brands.length === 0 ? '':  jointBrands;\n  const itemTypeQuery = itemType ? `&itemType_like=${itemType}` : ''\n\n  return `${API_URL}/products?_page=${page ?? 1}&_limit=${PAGE_SIZE}${sortQuery}${tagQuery}${brandsQuery}${itemTypeQuery}`\n\n}\n\n","import { put, takeLatest, call, select} from 'redux-saga/effects';\nimport axios from 'axios';\nimport { GET_PRODUCTS, PRODUCTS_RECEIVED, PRODUCTS_FAILED } from '../constants';\nimport { IProduct } from '../types';\nimport { getSelectedBrands } from '../selectors/brand';\nimport { getSelectedTags } from '../selectors/tag';\nimport {  getSort} from '../selectors/sort';\nimport { getPage } from '../selectors/page';\nimport { getItemType } from '../selectors/itemType';\n\nimport { generateProductURL } from '../lib/generateProductUrl';\n\nconst getProducts = ({ tags, brands, page, sort, itemType }: any) => axios.get<IProduct[]>(generateProductURL({ tags, brands, page, sort , itemType}));\n\nfunction* fetchProducts(action: any): any {\n  try {\n    const tags = yield select(getSelectedTags); \n    const brands = yield select(getSelectedBrands);\n    const page = yield select(getPage);\n    const sort = yield select(getSort);\n    const itemType = yield select(getItemType)\n\n    const response = yield call(getProducts, { tags, brands, page, sort, itemType });   \n\n    yield put({ type: PRODUCTS_RECEIVED, products: response.data, count: parseInt(response['headers']['x-total-count']) });\n    \n  } catch (error) {\n    yield put({type: PRODUCTS_FAILED, message: error.message})\n  }\n}\n\nfunction* watchProducts(): any {\n  yield takeLatest(GET_PRODUCTS, fetchProducts);\n}\nexport default watchProducts","import { put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { API_URL } from '../config/env';\nimport { GET_COMPANIES } from '../constants';\nimport { IProduct } from '../types';\nimport { getCompaniesSuccess, getCompaniesFailure } from '../actions';\n\nconst getCompanies = () => axios.get<IProduct[]>(`${API_URL}/companies`);\n\nfunction* fetchCompanies(): any {\n  try {\n    const response = yield call(getCompanies);   \n    yield put(getCompaniesSuccess(response.data));\n    \n  } catch (error) {\n    yield put(getCompaniesFailure(error.message))\n  }\n}\n\nfunction* watchCompanies(): any {\n  yield takeLatest(GET_COMPANIES, fetchCompanies);\n}\nexport  { watchCompanies }","import { all } from 'redux-saga/effects';\nimport watchProducts  from './productSaga';\nimport { watchCompanies } from './companySaga';\n\nexport default function* rootSaga() {\n  yield all([\n    watchProducts(),\n    watchCompanies(),\n  ]);\n}\n\n","import { GET_COMPANIES, COMPANIES_FAILED, COMPANIES_RECEIVED } from '../constants';\n\nexport const companyReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case GET_COMPANIES:\n         return { ...state, loading: true };\n    case COMPANIES_RECEIVED:\n         return { ...state, companies: action.companies, loading: false };\n    case COMPANIES_FAILED:\n      return { ...state, message: action.message, loading: false }\n    default: \n         return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { companyReducer } from './companyReducer';\nimport { productReducer } from './productReducer';\nimport { pageReducer } from './pageReducer';\nimport {sortReducer  } from './sortReducer';\nimport { brandReducer } from './brandReducer';\nimport { tagReducer } from './tagReducer';\nimport { orderReducer } from './orderReducer';\nimport { itemTypeReducer } from './itemTypeReducer';\n\nimport { IInitialState } from '../types';\n\nconst appReducer = combineReducers({\n  companyReducer,\n  productReducer,\n  tagReducer,\n  sortReducer,\n  brandReducer,\n  pageReducer,\n  orderReducer,\n  itemTypeReducer\n});\n\nconst initialState = {\n  orderReducer: { orders: []},\n  tagReducer: { tags: []},\n  productReducer: { products: []},\n  companyReducer: { companies: []},\n  brandReducer: { brands: []},\n  sortReducer: {},\n  pageReducer: {},\n  itemTypeReducer: { itemType: ''}\n}\n/**\n * Handles all state\n *\n * @param {object} state - application state\n * @param {object} action - contains what to do\n *\n * @returns {object} new state\n */\n// @ts-ignore\nexport const rootReducer = (state: Readonly<IInitialState> = initialState, action: any) => appReducer(state, action);\n","import { GET_PRODUCTS, PRODUCTS_RECEIVED, PRODUCTS_FAILED } from '../constants';\n\nexport const productReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case GET_PRODUCTS:\n         return { ...state, loading: true };\n    case PRODUCTS_RECEIVED:\n         return { ...state, products: action.products, count: action.count, loading: false };\n    case PRODUCTS_FAILED:\n      return { ...state, message: action.message, loading: false }\n    default: \n         return state;\n  }\n};\n","import { SET_TAGS, SET_ALL_TAGS } from '../constants';\n\nexport const tagReducer = (state = { tags: []}, action: any) => {\n  switch (action.type) {\n    case SET_TAGS: {\n      if(state.tags.length === 0) {\n        return { ...state, tags: [action.tag] };\n      }\n      //@ts-ignore\n      if(state.tags.includes('All')) {\n        return { ...state, tags: [] };\n\n      }\n      //@ts-ignore\n      if(state.tags.includes(action.tag)) {\n        const filteredTags = state.tags.filter((tag) => tag !== action.tag)\n        return { ...state, tags: filteredTags }\n      }\n      return { ...state, tags: [...state.tags, action.tag] }\n    }\n\n    case SET_ALL_TAGS: {\n      if(state.tags.length === action.tags.length) {\n        return { ...state, tags: [] };\n\n      }\n\n      return { ...state, tags: [...action.tags] };\n    }\n\n    default: \n         return state;\n  }\n};\n","import { SET_SORT } from '../constants';\n\nexport const sortReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case SET_SORT:\n         return { ...state, sort: action.sort };\n\n    default: \n         return state;\n  }\n};\n","import { SET_BRANDS , SET_ALL_BRANDS} from '../constants';\n\nexport const brandReducer = (state = { brands: [] }, action: any) => {\n  switch (action.type) {\n    case SET_BRANDS: {\n      if(state.brands.length === 0) {\n        return { ...state, brands: [action.brand] };\n      }\n      //@ts-ignore\n      if(state.brands.includes('All')) {\n        return { ...state, brands: [] };\n\n      }\n      //@ts-ignore\n      if(state.brands.includes(action.brand)) {\n        const filteredBrands = state.brands.filter((brand) => brand !== action.brand)\n        return { ...state, brands: filteredBrands }\n      }\n      return { ...state, brands: [...state.brands, action.brand] }\n    }\n\n    case SET_ALL_BRANDS: {\n      if(state.brands.length === action.brands.length) {\n        return { ...state, brands: [] };\n      }\n      return { ...state, brands: [...action.brands] };\n    }\n\n    default: \n         return state;\n  }\n};","import { SET_PAGE_NUMBER } from '../constants';\n\nexport const pageReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case SET_PAGE_NUMBER:\n         return { ...state, page: action.page };\n\n    default: \n         return state;\n  }\n};\n","import { INCREMENT_ORDER, SET_ORDER, DECREMENT_ORDER } from '../constants';\n\nimport { IOrder } from '../types';\nimport compact from 'lodash.compact';\n\nexport const orderReducer = (state = { orders: []}, action: any) => {\n  switch (action.type) {\n    case SET_ORDER:\n         return { ...state, orders: [...state?.orders,  action.order] };\n  \n    case INCREMENT_ORDER: {\n      const orders = state.orders.map((order: IOrder) => {\n        if(order.slug === action.order.slug) {\n          return {\n            slug: order.slug,\n            name: order.name,\n            count: order.count! + 1,\n            price: order.price,\n          }\n        }\n        return order\n      })\n      return { ...state, orders }\n    }\n\n    case DECREMENT_ORDER: {\n      const orders = state.orders.map((order: IOrder) => {\n        if(order.slug === action.order.slug) {\n          if(action.order.count! === 1) return \n          return {\n            slug: order.slug,\n            name: order.name,\n            count: order.count! - 1,\n            price: order.price,\n          }\n        }\n        return order\n      })\n      return { ...state, orders: compact(orders) }\n    }\n    default: \n         return state;\n  }\n};\n","import { SET_ITEM_TYPE } from '../constants';\n\nexport const itemTypeReducer = (state = { itemType: ''}, action: any) => {\n  switch (action.type) {\n    case SET_ITEM_TYPE:\n         return { ...state, itemType: action.itemType };\n\n    default: \n         return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { rootReducer } from '../reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}