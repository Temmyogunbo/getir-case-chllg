{"version":3,"sources":["types/index.ts","selectors/orders/index.ts","constants/index.ts","actions/index.ts","components/Orders/useOrders.tsx","components/layouts/Header/index.tsx","components/layouts/Footer/index.tsx","components/CheckBox/index.tsx","components/Sort/index.tsx","components/Sort/useSort.tsx","components/Order/index.tsx","components/Orders/index.tsx","components/Product/index.tsx","selectors/products/index.ts","components/Products/useProducts.tsx","components/common/Loader/index.tsx","components/Products/index.tsx","components/Brand/index.tsx","components/SearchInput/index.tsx","selectors/companies/index.ts","selectors/brand/index.ts","utils/search.ts","components/Brands/useBrands.tsx","components/Brands/index.tsx","components/Tag/index.tsx","selectors/tag/index.ts","components/Tags/useTags.tsx","components/Tags/index.tsx","components/Pagination/index.tsx","App.tsx","selectors/sort/index.ts","selectors/page/index.ts","selectors/itemType/index.ts","config/env.ts","lib/generateProductUrl.ts","sagas/productSaga.ts","sagas/companySaga.ts","sagas/index.ts","reducers/companyReducer.ts","reducers/rootReducer.ts","reducers/productReducer.ts","reducers/tagReducer.ts","reducers/sortReducer.ts","reducers/brandReducer.ts","reducers/pageReducer.ts","reducers/orderReducer.ts","reducers/itemTypeReducer.ts","store/index.ts","index.tsx"],"names":["CheckBoxType","ProductType","SortBy","Tags","ItemTypes","getOrders","state","orderReducer","orders","GET_PRODUCTS","PRODUCTS_RECEIVED","PRODUCTS_FAILED","GET_COMPANIES","COMPANIES_RECEIVED","COMPANIES_FAILED","SET_TAGS","SET_ALL_TAGS","SET_BRANDS","SET_ALL_BRANDS","SET_SORT","SET_PAGE_NUMBER","SET_ORDER","INCREMENT_ORDER","DECREMENT_ORDER","SET_ITEM_TYPE","getProducts","type","setSort","sort","incrementOrder","order","useOrders","useSelector","dispatch","useDispatch","models","operations","handleDecrementOrder","decrementOrder","handleIncrementOrder","totalOrder","reduce","accum","currVal","Number","price","count","Header","toggleMobileOrder","showTotalOrder","className","src","alt","onClick","style","backgroundColor","toFixed","Footer","Date","getFullYear","RadioCheckBox","checked","SquareCheckBox","Checkbox","Radio","Sort","useState","sortBy","setSortBy","handleSort","selectedSortBy","useSort","PRICE_LOW_TO_HIGH","PRICE_HIGH_TO_LOW","NEW_TO_OLD","OLD_TO_NEW","Order","slug","Orders","length","map","index","Product","product","name","productReducer","products","useProducts","handleSetProduct","filter","setOrder","handleSetItemType","itemType","setItemType","getProductsAction","Loading","Products","isEmpty","Mug","Shirt","Brand","brand","handleBrand","handleBrandCount","Square","SearchInput","searchValue","placeholder","handleChange","value","onChange","getCompanies","companyReducer","companies","getSelectedBrands","brandReducer","brands","search","key","searchBox","item","toLowerCase","includes","useBrands","selectedBrands","getStateProducts","setBrandss","setSearchValue","useEffect","handleSearch","event","target","newBrands","compact","setAllBrands","getBrandsSlug","setBrands","countBrand","manufacturer","isBrandSelected","Brands","Fragment","Tag","tag","handleTag","handleTagCount","getSelectedTags","tagReducer","tags","TagLists","Object","values","useTags","selectedTags","setTagss","setAllTags","setTags","countTag","productTags","flatten","productTag","uniq","isTagSelected","useStyles","makeStyles","theme","root","marginTop","spacing","PaginationControlled","classes","React","page","setPage","Pagination","setPageNumber","shape","color","boundaryCount","App","showMobileOrder","setShowMobileOrder","getSort","sortReducer","getPage","pageReducer","getItemType","itemTypeReducer","API_URL","env","get","asString","PAGE_SIZE","generateProductURL","sortOrder","getSortOder","jointTags","join","jointBrands","sortQuery","tagQuery","brandsQuery","itemTypeQuery","fetchProducts","watchProducts","axios","action","select","call","response","put","data","parseInt","message","takeLatest","fetchCompanies","watchCompanies","rootSaga","all","appReducer","combineReducers","loading","filteredTags","filteredBrands","initialState","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58b7d07d.chunk.js","sourcesContent":["export enum CheckBoxType {\n  Radio = 'Radio',\n  Square = 'Square',\n}\n\nexport enum ProductType {\n  mug = 'mug',\n  shirt = 'shirt',\n}\n\nexport interface IProduct {\n  price: string;\n  name: string;\n  description: string;\n  manufacturer: string;\n  itemType: ProductType;\n  tags: string[];\n  added: number;\n  slug: string;\n}\n\nexport interface ICompany {\n  slug: string;\n  name: string;\n  address: string;\n  city: string;\n  state: string;\n  zip: string;\n  account: number;\n  contact: string;\n}\n\nexport enum SortBy {\n  PRICE_LOW_TO_HIGH = 'PRICE_LOW_TO_HIGH',\n  PRICE_HIGH_TO_LOW = 'PRICE_HIGH_TO_LOW',\n  NEW_TO_OLD = 'NEW_TO_OLD',\n  OLD_TO_NEW = 'OLD_TO_NEW',\n}\n\nexport interface IOrder extends IProduct {\n  count?: number;\n}\n\nexport interface IInitialState {\n  orderReducer: null | any;\n  tagReducer: null | any;\n  productReducer: null | any;\n  companyReducer: null | any;\n  brandReducer: null | any;\n  sortReducer: null | any;\n  pageReducer: null | any;\n  itemTypeReducer: null | any;\n}\n\nexport enum Tags {\n  All = 'All',\n  Trees = 'Trees',\n  Beach = 'Beach',\n  Ocean = 'Ocean',\n  Water = 'Water',\n  Animal = 'Animal',\n  Bear = 'Bear',\n  Road = 'Road',\n  Rocks = 'Rocks',\n  Sunset = 'Sunset',\n  Rust = 'Rust',\n  Old = 'Old',\n  Car = 'Car',\n  Coffee = 'Coffee',\n  Fog = 'Fog',\n  People = 'People',\n  Dock = 'Dock',\n  Person = 'Person',\n  Hills = 'Hills',\n  Animals = 'Animals',\n  Sheep = 'Sheep',\n  Lake = 'Lake',\n  Building = 'Building',\n  Metal = 'Metal',\n  Woman = 'Woman',\n}\n\nexport enum ItemTypes {\n  Shirt = 'shirt',\n  Mug = 'mug',\n}\n","export const getOrders = (state: any) => state.orderReducer.orders;\n","export const GET_PRODUCTS = 'GET_PRODUCTS';\nexport const PRODUCTS_RECEIVED = 'PRODUCTS_RECEIVED';\nexport const PRODUCTS_FAILED = 'GET_PRODUCTS_FAILED';\n\nexport const GET_COMPANIES = 'GET_COMPANIES';\nexport const COMPANIES_RECEIVED = 'COMPANIES_RECEIVED';\nexport const COMPANIES_FAILED = 'COMPANIES_FAILED';\n\nexport const SET_TAGS = 'SET_TAGS';\nexport const SET_ALL_TAGS = 'SET_ALL_TAGS';\n\nexport const REMOVE_TAG = 'REMOVE_TAG';\n\nexport const SET_BRANDS = 'SET_BRANDS';\nexport const SET_ALL_BRANDS = 'SET_ALL_BRANDS';\n\nexport const SET_SORT = 'SET_SORT';\n\nexport const SET_PAGE_NUMBER = 'SET_PAGE_NUMBER';\n\nexport const SET_ORDER = 'SET_ORDER';\nexport const INCREMENT_ORDER = 'INCREMENT_ORDER';\nexport const DECREMENT_ORDER = 'DECREMENT_ORDER';\n\nexport const SET_ITEM_TYPE = 'SET_ITEM_TYPE';\n","import {\n  GET_PRODUCTS,\n  GET_COMPANIES,\n  COMPANIES_RECEIVED,\n  COMPANIES_FAILED,\n  PRODUCTS_RECEIVED,\n  PRODUCTS_FAILED,\n  SET_BRANDS,\n  SET_PAGE_NUMBER,\n  SET_SORT,\n  SET_TAGS,\n  SET_ORDER,\n  INCREMENT_ORDER,\n  DECREMENT_ORDER,\n  SET_ALL_TAGS,\n  SET_ALL_BRANDS,\n  SET_ITEM_TYPE,\n} from '../constants';\nimport { IProduct, ICompany, IOrder, ItemTypes } from '../types';\n\nexport const getProducts = () => ({\n  type: GET_PRODUCTS,\n});\n\nexport const getProductsSuccess = (products: IProduct) => ({\n  type: PRODUCTS_RECEIVED,\n  products,\n});\n\nexport const getProductsFailure = (message: string) => ({\n  type: PRODUCTS_FAILED,\n  message,\n});\n\nexport const getCompanies = () => ({\n  type: GET_COMPANIES,\n});\n\nexport const getCompaniesSuccess = (companies: ICompany) => ({\n  type: COMPANIES_RECEIVED,\n  companies,\n});\n\nexport const getCompaniesFailure = (message: string) => ({\n  type: COMPANIES_FAILED,\n  message,\n});\n\nexport const setTags = (tag: string) => ({\n  type: SET_TAGS,\n  tag,\n});\n\nexport const setAllTags = (tags: string[]) => ({\n  type: SET_ALL_TAGS,\n  tags,\n});\n\nexport const setBrands = (brand: string) => ({\n  type: SET_BRANDS,\n  brand,\n});\n\nexport const setAllBrands = (brands: string[]) => ({\n  type: SET_ALL_BRANDS,\n  brands,\n});\n\nexport const setSort = (sort: string) => ({\n  type: SET_SORT,\n  sort,\n});\n\nexport const setPageNumber = (page: number) => ({\n  type: SET_PAGE_NUMBER,\n  page,\n});\n\nexport const setOrder = (order: IOrder) => ({\n  type: SET_ORDER,\n  order: {\n    ...order,\n    count: 1,\n  },\n});\n\nexport const incrementOrder = (order: IOrder) => ({\n  type: INCREMENT_ORDER,\n  order,\n});\n\nexport const decrementOrder = (order: IOrder) => ({\n  type: DECREMENT_ORDER,\n  order,\n});\n\nexport const setItemType = (itemType: ItemTypes) => ({\n  type: SET_ITEM_TYPE,\n  itemType,\n});\n\n","import { useSelector, useDispatch } from 'react-redux';\nimport { getOrders } from '../../selectors/orders';\nimport { incrementOrder, decrementOrder } from '../../actions';\nimport { IOrder } from '../../types';\n\nexport const useOrders = () => {\n  const orders = useSelector(getOrders);\n  const dispatch = useDispatch();\n\n  const handleIncrementOrder = (order: IOrder) =>\n    dispatch(incrementOrder(order));\n  const handleDecrementOrder = (order: IOrder) =>\n    dispatch(decrementOrder(order));\n\n  const totalOrder = (orders: IOrder[]) => {\n    return orders.reduce(\n      (accum, currVal) => accum + Number(currVal.price) * currVal.count!,\n      0,\n    );\n  };\n  return {\n    models: { orders },\n    operations: { handleDecrementOrder, handleIncrementOrder, totalOrder },\n  };\n};\n","import { useOrders } from '../../Orders/useOrders';\n\nexport const Header = ({ toggleMobileOrder }: { toggleMobileOrder: any }) => {\n  const { models, operations } = useOrders();\n\n  const { orders } = models;\n  const { totalOrder } = operations;\n\n  const showTotalOrder = totalOrder(orders) > 0;\n\n  return (\n    <>\n      <div className=\"w-6/12 flex justify-end relative\">\n        <img className=\"Header-logo\" src=\"/icons/market.svg\" alt=\"Logo\" />\n      </div>\n      {showTotalOrder && (\n        <div\n          className=\"flex justify-end absolute top-0 md:right-0 left-56\"\n          onClick={toggleMobileOrder}\n        >\n          <span\n            className=\"font-sans  text-xs md:mr-32 flex py-5 px-4 cursor-pointer\"\n            style={{ backgroundColor: '#147594' }}\n          >\n            <span>\n              <img className=\"Header-logo\" src=\"/icons/lock.svg\" alt=\"Logo\" />\n            </span>\n\n            <span className=\"text-white font-semibold text-base\">\n              £ {totalOrder(orders).toFixed(2)}\n            </span>\n          </span>\n        </div>\n      )}\n    </>\n  );\n};\n","export const Footer = () => (\n  <div className=\"flex justify-center text-blue-400 font-normal text-sm relative\">\n    <span className=\"mr-4\">©{new Date().getFullYear()} Market</span>\n    <span className=\"absolute bottom-1\">.</span>\n    <span className=\"ml-4\">Privacy Policy</span>\n  </div>\n);\n","import { CheckBoxType } from '../../types';\n\nexport const RadioCheckBox = ({ checked }: { checked: boolean }) => {\n  return (\n    <div>\n      {checked ? (\n        <img\n          className=\"Header-logo\"\n          src=\"/icons/radio-check-box-on.svg\"\n          alt=\"Logo\"\n        />\n      ) : (\n        <img\n          className=\"Header-logo\"\n          src=\"/icons/radio-check-box-off.svg\"\n          alt=\"Logo\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport const SquareCheckBox = ({ checked }: { checked: boolean }) => {\n  return (\n    <div>\n      {checked ? (\n        <img\n          className=\"Header-logo\"\n          src=\"/icons/square-check-box-on.svg\"\n          alt=\"Logo\"\n        />\n      ) : (\n        <img\n          className=\"Header-logo\"\n          src=\"/icons/square-check-box-off.svg\"\n          alt=\"Logo\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport const Checkbox = ({\n  checked,\n  type,\n}: {\n  checked: boolean;\n  type: CheckBoxType;\n}) => {\n  return (\n    <div className=\"inline-block align-middle\">\n      {type === CheckBoxType.Radio ? (\n        <RadioCheckBox checked={checked} />\n      ) : (\n        <SquareCheckBox checked={checked} />\n      )}\n    </div>\n  );\n};\n","import { Checkbox } from '../CheckBox';\nimport { CheckBoxType } from '../../types';\nimport { useSort } from './useSort';\nimport { SortBy } from '../../types';\n\nexport const Sort = () => {\n  const { models, operations } = useSort();\n\n  const { sortBy } = models;\n  const { handleSort } = operations;\n\n  return (\n    <div className=\"px-2 py-4\">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-base\">Sorting</h3>\n      <ul className=\"bg-white py-4\">\n        <li\n          className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\"\n          onClick={() => handleSort(SortBy.PRICE_LOW_TO_HIGH)}\n        >\n          <span className=\"m-2\">\n            <Checkbox\n              checked={SortBy.PRICE_LOW_TO_HIGH === sortBy}\n              type={CheckBoxType.Radio}\n            />\n          </span>{' '}\n          Price low to high\n        </li>\n        <li\n          className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\"\n          onClick={() => handleSort(SortBy.PRICE_HIGH_TO_LOW)}\n        >\n          <span className=\"m-2\">\n            <Checkbox\n              checked={SortBy.PRICE_HIGH_TO_LOW === sortBy}\n              type={CheckBoxType.Radio}\n            />\n          </span>{' '}\n          Price high to low\n        </li>\n        <li\n          className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\"\n          onClick={() => handleSort(SortBy.NEW_TO_OLD)}\n        >\n          <span className=\"m-2\">\n            <Checkbox\n              checked={SortBy.NEW_TO_OLD === sortBy}\n              type={CheckBoxType.Radio}\n            />\n          </span>{' '}\n          New to old\n        </li>\n        <li\n          className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\"\n          onClick={() => handleSort(SortBy.OLD_TO_NEW)}\n        >\n          <span className=\"m-2\">\n            <Checkbox\n              checked={SortBy.OLD_TO_NEW === sortBy}\n              type={CheckBoxType.Radio}\n            />\n          </span>{' '}\n          Old to new\n        </li>\n      </ul>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport { SortBy } from '../../types';\nimport { useDispatch } from 'react-redux';\nimport { setSort, getProducts } from '../../actions';\n\nexport const useSort = () => {\n  const [sortBy, setSortBy] = useState('');\n  const dispatch = useDispatch();\n\n  const handleSort = (selectedSortBy: SortBy) => {\n    if (sortBy === selectedSortBy) {\n      setSortBy('');\n      dispatch(setSort(''));\n    } else {\n      setSortBy(selectedSortBy);\n      dispatch(setSort(selectedSortBy));\n    }\n    dispatch(getProducts());\n  };\n\n  return { models: { sortBy }, operations: { handleSort } };\n};\n","import { IOrder } from '../../types';\n\nexport const Order = ({\n  order,\n  handleDecrementOrder,\n  handleIncrementOrder,\n}: {\n  order: IOrder;\n  handleDecrementOrder: any;\n  handleIncrementOrder: any;\n}) => (\n  <div className=\"flex flex-row p-2 justify-between border-b-2\">\n    <div className=\"p-2\">\n      <h3 className=\"text-gray-600 text-base font-medium\">{order.slug}</h3>\n      <span className=\"text-blue-400 font-semibold\">£ {order.price}</span>\n    </div>\n    <div className=\"flex flex-row cursor-pointer\">\n      <img\n        className=\"\"\n        src=\"/icons/minus.svg\"\n        alt=\"minus\"\n        onClick={() => handleDecrementOrder(order)}\n      />\n\n      <button className=\"bg-blue-400 p-4 text-white font-semibold mx-2 \">\n        {order.count}\n      </button>\n\n      <img\n        className=\"\"\n        src=\"/icons/plus.svg\"\n        alt=\"plus\"\n        onClick={() => handleIncrementOrder(order)}\n      />\n    </div>\n  </div>\n);\n","import { Order } from '../Order';\nimport { useOrders } from './useOrders';\nexport const Orders = () => {\n  const { models, operations } = useOrders();\n  const { orders } = models;\n\n  const { handleDecrementOrder, handleIncrementOrder, totalOrder } = operations;\n\n  if (orders.length === 0) return null;\n\n  return (\n    <div className=\"border-8 border-blue-400 bg-white p-2 \">\n      <div className=\"h-80 overflow-y-scroll\">\n        {orders.map((order: any, index: number) => (\n          <Order\n            order={order}\n            key={`ord-${index}`}\n            handleDecrementOrder={handleDecrementOrder}\n            handleIncrementOrder={handleIncrementOrder}\n          />\n        ))}\n      </div>\n      <div className=\"flex justify-end mb-2 mt-4\">\n        <button className=\"border-2 border-blue-400 p-3 text-blue-400 font-semibold\">\n          £ {totalOrder(orders).toFixed(2)}\n        </button>\n      </div>\n    </div>\n  );\n};\n","import { IProduct } from '../../types';\n\nexport const Product = ({ product }: { product: IProduct }) => (\n  <div className=\"w-32 p-4\">\n    <div className=\"p-4 bg-gray-100 rounded-md\">\n      <img className=\"\" src=\"/icons/product.jpeg\" alt=\"Product\" />\n    </div>\n    <div>\n      <div className=\" p-2\">\n        <span className=\"text-blue-400 font-semibold\">£ {product.price}</span>\n      </div>\n      <div>\n        <span className=\"text-gray-900 font-semibold leading-3 text-sm\">\n          {product.name}\n        </span>\n      </div>\n    </div>\n  </div>\n);\n","export const getProducts = (state: any) => state.productReducer.products;\nexport const getItemTypes = (state: any) =>\n  getProducts(state).map((product: any) => product.itemType);\n","import { IProduct, IOrder, ItemTypes } from '../../types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getProducts } from '../../selectors/products';\nimport { getOrders } from '../../selectors/orders';\nimport {\n  setOrder,\n  incrementOrder,\n  setItemType,\n  getProducts as getProductsAction,\n} from '../../actions';\n\nexport const useProducts = () => {\n  const products = useSelector(getProducts);\n  const orders = useSelector(getOrders);\n\n  const dispatch = useDispatch();\n\n  const handleSetProduct = (product: IProduct) => {\n    if (orders.length !== 0) {\n      const order = orders.filter(({ slug }: IOrder) => slug === product.slug);\n      const hasOrder = order.length !== 0;\n\n      if (hasOrder) {\n        dispatch(incrementOrder(product));\n        return;\n      }\n    }\n    dispatch(setOrder(product));\n  };\n\n  const handleSetItemType = (itemType: ItemTypes) => {\n    dispatch(setItemType(itemType));\n    dispatch(getProductsAction());\n  };\n\n  return {\n    models: { products },\n    operations: { handleSetProduct, handleSetItemType },\n  };\n};\n","import React, { FunctionComponent } from 'react';\nimport { FaSpinner } from 'react-icons/fa';\n\nexport const Loading: FunctionComponent = () => (\n  <div className=\"w-full h-1/3 flex justify-center items-center\">\n    <FaSpinner className=\"absolute mt-36 animate-spin h-10 w-10 text-primary\" />\n  </div>\n);\n","import { Product } from '../Product';\nimport { IProduct, ItemTypes } from '../../types';\nimport { useProducts } from './useProducts';\nimport { Loading } from '../common/Loader';\nimport isEmpty from 'lodash.isempty';\n\nexport const Products = () => {\n  const { models, operations } = useProducts();\n  const { products } = models;\n  const { handleSetProduct, handleSetItemType } = operations;\n\n  if (isEmpty(products)) return <Loading />;\n\n  return (\n    <div className=\"px-2 py-4 \">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-lg\">Products</h3>\n      <div className=\"p-2 mb-2\">\n        <button\n          className=\"bg-blue-400 mr-2 px-4 py-1 font-semibold rounded-sm text-white\"\n          onClick={() => handleSetItemType(ItemTypes.Mug)}\n        >\n          {ItemTypes.Mug}\n        </button>\n        <button\n          className=\"bg-pink-100 px-4 py-1 font-normal rounded-sm text-blue-400\"\n          onClick={() => handleSetItemType(ItemTypes.Shirt)}\n        >\n          {ItemTypes.Shirt}\n        </button>\n      </div>\n      <div className=\"flex flex-wrap justify-center align-center p-4 bg-white\">\n        {products?.map((product: IProduct, index: number) => {\n          return (\n            <div key={`${product.name}-${index}`}>\n              <Product product={product} />\n              <div className=\"p-4\">\n                <button\n                  className=\"bg-blue-400 w-full rounded text-white font-medium\"\n                  onClick={() => handleSetProduct(product)}\n                >\n                  Add\n                </button>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n","import { Checkbox } from '../CheckBox';\nimport { CheckBoxType, ICompany } from '../../types';\n\nexport const Brand = ({\n  brand,\n  checked,\n  handleBrand,\n  handleBrandCount,\n}: {\n  brand: ICompany;\n  count?: number;\n  checked: boolean;\n  handleBrand: any;\n  handleBrandCount: any;\n}) => (\n  <li\n    className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\"\n    onClick={() => handleBrand(brand)}\n  >\n    <span className=\"m-2 \">\n      <Checkbox checked={checked} type={CheckBoxType.Square} />\n    </span>\n    <span>\n      {brand.name} ({handleBrandCount(brand)})\n    </span>\n  </li>\n);\n","export const SearchInput = ({\n  searchValue,\n  placeholder,\n  handleChange,\n}: {\n  searchValue: string;\n  placeholder: string;\n  handleChange: any;\n}) => {\n  return (\n    <div>\n      <input\n        name=\"searchTerm\"\n        value={searchValue}\n        className=\"pl-12 w-full h-12 border focus:bg-white border-primary focus:border-primary focus:outline-none\"\n        placeholder={placeholder}\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n","export const getCompanies = (state: any) => state.companyReducer.companies;\n","export const getSelectedBrands = (state: any) => state.brandReducer.brands;\n","export const search =\n  (searchValue: string, key?: string) => (searchBox: string[]) => {\n    if (!searchValue) return [];\n\n    return searchBox.map((item) => {\n      if (key) {\n        if (item.toLowerCase().includes(searchValue.toLowerCase())) return item;\n      }\n      if (item.toLowerCase().includes(searchValue.toLowerCase())) return item;\n    });\n  };\n","import { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ICompany, IProduct } from '../../types';\nimport compact from 'lodash.compact';\nimport { setBrands, getProducts, setAllBrands } from '../../actions';\nimport { useDispatch } from 'react-redux';\nimport { getCompanies } from '../../selectors/companies';\nimport { getProducts as getStateProducts } from '../../selectors/products';\nimport { getSelectedBrands } from '../../selectors/brand';\nimport { search } from '../../utils/search';\n\n// export const searchBrands = (searchValue: string) => ( brands: ICompany[]) => {\n//   if(!searchValue) return ([]);\n\n//   return brands.map(brand => {\n//     if(brand.name.toLowerCase().includes(searchValue.toLowerCase())) return brand;\n//     return null;\n//   });\n// }\n\nconst getBrandsSlug = (companies: ICompany[]) =>\n  companies.map(({ slug }) => slug);\n\nexport const useBrands = () => {\n  const companies = useSelector(getCompanies);\n  const selectedBrands = useSelector(getSelectedBrands);\n  const products = useSelector(getStateProducts);\n\n  const [brands, setBrandss] = useState<undefined | ICompany[]>([]);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (companies) {\n      setBrandss([{ slug: 'All', name: 'All' }, ...companies]);\n    }\n  }, [companies]);\n\n  const isBrandSelected = (brand: string) => {\n    return selectedBrands.includes(brand);\n  };\n\n  const handleBrand = (brand: ICompany) => {\n    if (brand.slug === 'All') {\n      dispatch(\n        setAllBrands(\n          getBrandsSlug([{ slug: 'All', name: 'All' }, ...companies]),\n        ),\n      );\n    } else {\n      dispatch(setBrands(brand.slug));\n    }\n    dispatch(getProducts());\n  };\n\n  const handleSearch = (event: any) => {\n    const value = event.target.value;\n\n    setSearchValue(value);\n    if (brands) {\n      if (value) {\n        const newBrands = search(value, 'name')(companies);\n        // @ts-ignore\n        setBrandss(compact([...newBrands]));\n      } else {\n        setBrandss(companies);\n      }\n    }\n  };\n\n  const countBrand = (brand: ICompany) => {\n    const brands = products.filter(\n      (product: IProduct) => product.manufacturer === brand.slug,\n    );\n\n    if (brand.slug === 'All') return products.length;\n\n    return brands.length;\n  };\n\n  return {\n    operations: { handleSearch, handleBrand, countBrand, isBrandSelected },\n    models: { brands, searchValue },\n  };\n};\n","import { Brand } from '../Brand';\nimport React from 'react';\nimport { SearchInput } from '../SearchInput';\nimport { useBrands } from './useBrands';\nimport { Loading } from '../common/Loader';\n\nexport const Brands = () => {\n  const { models, operations } = useBrands();\n\n  const { brands, searchValue } = models;\n  const { handleSearch, handleBrand, countBrand, isBrandSelected } = operations;\n\n  if (brands && brands?.length <= 1) return <Loading />;\n\n  return (\n    <div className=\" px-2 py-4 mt-10\">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-base\">Brands</h3>\n      <div className=\"bg-white py-4\">\n        <SearchInput\n          searchValue={searchValue}\n          placeholder=\"Search Brand\"\n          handleChange={handleSearch}\n        />\n        {brands && (\n          <ul className=\"h-64 overflow-y-scroll\">\n            {brands?.map((brand, index) => (\n              <React.Fragment key={`${brand}-${index}`}>\n                <Brand\n                  brand={brand}\n                  checked={isBrandSelected(brand.slug)}\n                  handleBrand={handleBrand}\n                  handleBrandCount={countBrand}\n                />\n              </React.Fragment>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { Checkbox } from '../CheckBox';\nimport { CheckBoxType } from '../../types';\n\nexport const Tag = ({\n  tag,\n  checked,\n  handleTag,\n  count,\n  handleTagCount,\n}: {\n  tag: string;\n  checked: boolean;\n  handleTag: any;\n  count?: number;\n  handleTagCount: any;\n}) => (\n  <li\n    className=\"p-2 text-gray-700 font-normal text-base cursor-pointer focus:outline-none\"\n    onClick={() => handleTag(tag)}\n  >\n    <span className=\"m-2 \">\n      <Checkbox checked={checked} type={CheckBoxType.Square} />\n    </span>{' '}\n    {tag} ({handleTagCount(tag)})\n  </li>\n);\n","export const getSelectedTags = (state: any) => state.tagReducer.tags;\n","import { useSelector } from 'react-redux';\nimport { IProduct, Tags } from '../../types';\nimport { useState } from 'react';\nimport compact from 'lodash.compact';\nimport flatten from 'lodash.flatten';\nimport uniq from 'lodash.uniq';\nimport { useDispatch } from 'react-redux';\nimport { setTags, getProducts, setAllTags } from '../../actions';\nimport { getSelectedTags } from '../../selectors/tag';\nimport { getProducts as getStateProducts } from '../../selectors/products';\nimport { search } from '../../utils/search';\n\nconst TagLists = Object.values(Tags);\n\nexport const useTags = () => {\n  const selectedTags = useSelector(getSelectedTags);\n  const products = useSelector(getStateProducts);\n\n  const [tags, setTagss] = useState<string[]>(TagLists);\n  const [searchValue, setSearchValue] = useState<string>('');\n\n  const dispatch = useDispatch();\n\n  const isTagSelected = (tag: string) => selectedTags.includes(tag);\n\n  const handleTag = (tag: string) => {\n    if (tag === 'All') {\n      dispatch(setAllTags(TagLists));\n    } else {\n      dispatch(setTags(tag));\n    }\n    dispatch(getProducts());\n  };\n\n  const handleSearch = (event: any) => {\n    const value = event.target.value;\n\n    setSearchValue(value);\n    if (tags) {\n      if (value) {\n        const newBrands = search(value)(TagLists);\n        setTagss(compact([...newBrands]));\n      } else {\n        setTagss(TagLists);\n      }\n    }\n  };\n\n  const countTag = (tag: string) => {\n    const productTags = flatten(\n      products.map((product: IProduct) => product.tags),\n    );\n\n    const tags = productTags.filter((productTag) => productTag === tag);\n\n    if (tag === 'All') return productTags.length - uniq(productTags).length;\n\n    return tags.length;\n  };\n\n  return {\n    models: { tags, searchValue },\n    operations: { handleSearch, handleTag, countTag, isTagSelected },\n  };\n};\n","import { SearchInput } from '../SearchInput';\nimport { Tag } from '../Tag';\nimport React from 'react';\nimport { useTags } from './useTags';\n\nexport const Tags = () => {\n  const {\n    models: { tags, searchValue },\n    operations: { handleSearch, handleTag, countTag, isTagSelected },\n  } = useTags();\n\n  return (\n    <div className=\"px-2 py-4\">\n      <h3 className=\"p-2 mb-2 text-gray-700 font-normal text-base\">Tags</h3>\n      <div className=\"bg-white py-4\">\n        <SearchInput\n          searchValue={searchValue}\n          placeholder=\"Search Tag\"\n          handleChange={handleSearch}\n        />\n        <ul className=\"h-64 overflow-y-scroll\">\n          {tags.map((tag, index) => (\n            <React.Fragment key={`${tag}-${index}`}>\n              <Tag\n                tag={tag}\n                checked={isTagSelected(tag)}\n                handleTag={handleTag}\n                handleTagCount={countTag}\n              />\n            </React.Fragment>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { setPageNumber, getProducts } from '../../actions';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > * + *': {\n      marginTop: theme.spacing(12),\n    },\n  },\n}));\n\nexport default function PaginationControlled() {\n  const count = useSelector((state: any) => state.productReducer.count);\n  const dispatch = useDispatch();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(1);\n  const handleChange = (event: any, value: any) => {\n    setPage(value);\n    dispatch(setPageNumber(value));\n    dispatch(getProducts());\n  };\n\n  return (\n    <div className={classes.root}>\n      <Pagination\n        count={count}\n        page={page}\n        onChange={handleChange}\n        shape=\"rounded\"\n        color=\"primary\"\n        boundaryCount={4}\n      />\n    </div>\n  );\n}\n","import { Header } from './components/layouts/Header';\nimport { Footer } from './components/layouts/Footer';\nimport { Sort } from './components/Sort';\nimport { Orders } from './components/Orders';\nimport { Products } from './components/Products';\nimport { getProducts, getCompanies } from './actions';\nimport { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Brands } from './components/Brands';\nimport { Tags } from './components/Tags';\nimport Pagination from './components/Pagination';\n\nfunction App() {\n  const [showMobileOrder, setShowMobileOrder] = useState(false);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getProducts());\n    dispatch(getCompanies());\n  }, []);\n\n  const toggleMobileOrder = () => setShowMobileOrder(!showMobileOrder);\n\n  return (\n    <div className=\"grid grid-cols-12 gap-2  bg-gray-50 relative\">\n      <header className=\"row-auto col-span-12 bg-blue-400 py-3 flex\">\n        <Header toggleMobileOrder={toggleMobileOrder} />\n      </header>\n\n      <aside className=\"col-span-3 xl:col-span-3 row-span-4 px-4 hidden lg:block\">\n        <Sort />\n        <Brands />\n        <Tags />\n      </aside>\n      <main className=\"col-span-12 md:col-span-7 lg:col-span-6 xl:col-span-6 bg-transparent row-span-4 flex flex-wrap align-center\">\n        <Products />\n        <Pagination />\n      </main>\n\n      <aside className=\"col-span-5 hidden md:block lg:col-span-3 xl:col-span-3  row-span-4 px-4\">\n        <Orders />\n      </aside>\n\n      {showMobileOrder && (\n        <aside className=\"col-span-6 block md:hidden row-span-4 px-4 absolute top-20 right-0\">\n          <Orders />\n        </aside>\n      )}\n      <footer className=\"row-auto col-span-12 p-8\">\n        <Footer />\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","export const getSort = (state: any) => state.sortReducer.sort;\n","export const getPage = (state: any) => state.pageReducer.page;\n","export const getItemType = (state: any) => state.itemTypeReducer.itemType;\n","import env from 'env-var';\n\nexport const API_URL = env.get('REACT_APP_API_URL').asString();\nexport const PAGE_SIZE = env.get('REACT_APP_PAGE_SIZE').asString();\n","import { API_URL, PAGE_SIZE } from '../config/env';\nimport { SortBy } from '../types';\n\nconst getSortOder = (sort: string) => {\n  if (sort) {\n    if (sort === SortBy.PRICE_HIGH_TO_LOW) {\n      return ['price', 'desc'];\n    } else if (sort === SortBy.PRICE_LOW_TO_HIGH) {\n      return ['price', 'asc'];\n    } else if (sort === SortBy.NEW_TO_OLD) {\n      return ['added', 'desc'];\n    } else if (sort === SortBy.OLD_TO_NEW) {\n      return ['added', 'asc'];\n    }\n  }\n  return '';\n};\n\nexport const generateProductURL = ({\n  tags,\n  brands,\n  page,\n  sort,\n  itemType,\n}: {\n  tags: string[];\n  brands: string[];\n  page: number;\n  sort: string;\n  itemType: string;\n}) => {\n  const sortOrder = getSortOder(sort);\n\n  const jointTags = tags\n    .filter((tag) => tag !== 'All')\n    .map((tag) => `&tags_like=${tag}`)\n    .join('');\n  const jointBrands = brands\n    .filter((brand) => brand !== 'All')\n    .map((brand) => `&manufacturer=${brand}`)\n    .join('');\n\n  const sortQuery = sortOrder\n    ? `&_sort=${sortOrder[0]}&_order=${sortOrder[1]}`\n    : '';\n  const tagQuery = tags.length === 0 ? '' : jointTags;\n  const brandsQuery = brands.length === 0 ? '' : jointBrands;\n  const itemTypeQuery = itemType ? `&itemType_like=${itemType}` : '';\n\n  return `${API_URL}/products?_page=${\n    page ?? 1\n  }&_limit=${PAGE_SIZE}${sortQuery}${tagQuery}${brandsQuery}${itemTypeQuery}`;\n};\n","import { put, takeLatest, call, select } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { GET_PRODUCTS, PRODUCTS_RECEIVED, PRODUCTS_FAILED } from '../constants';\nimport { IProduct } from '../types';\nimport { getSelectedBrands } from '../selectors/brand';\nimport { getSelectedTags } from '../selectors/tag';\nimport { getSort } from '../selectors/sort';\nimport { getPage } from '../selectors/page';\nimport { getItemType } from '../selectors/itemType';\n\nimport { generateProductURL } from '../lib/generateProductUrl';\n\nconst getProducts = ({ tags, brands, page, sort, itemType }: any) =>\n  axios.get<IProduct[]>(\n    generateProductURL({ tags, brands, page, sort, itemType }),\n  );\n\nfunction* fetchProducts(action: any): any {\n  try {\n    const tags = yield select(getSelectedTags);\n    const brands = yield select(getSelectedBrands);\n    const page = yield select(getPage);\n    const sort = yield select(getSort);\n    const itemType = yield select(getItemType);\n\n    const response = yield call(getProducts, {\n      tags,\n      brands,\n      page,\n      sort,\n      itemType,\n    });\n\n    yield put({\n      type: PRODUCTS_RECEIVED,\n      products: response.data,\n      count: parseInt(response['headers']['x-total-count']),\n    });\n  } catch (error) {\n    yield put({ type: PRODUCTS_FAILED, message: error.message });\n  }\n}\n\nfunction* watchProducts(): any {\n  yield takeLatest(GET_PRODUCTS, fetchProducts);\n}\nexport default watchProducts;\n","import { put, takeLatest, call } from 'redux-saga/effects';\nimport axios from 'axios';\nimport { API_URL } from '../config/env';\nimport { GET_COMPANIES } from '../constants';\nimport { IProduct } from '../types';\nimport { getCompaniesSuccess, getCompaniesFailure } from '../actions';\n\nconst getCompanies = () => axios.get<IProduct[]>(`${API_URL}/companies`);\n\nfunction* fetchCompanies(): any {\n  try {\n    const response = yield call(getCompanies);\n    yield put(getCompaniesSuccess(response.data));\n  } catch (error) {\n    yield put(getCompaniesFailure(error.message));\n  }\n}\n\nfunction* watchCompanies(): any {\n  yield takeLatest(GET_COMPANIES, fetchCompanies);\n}\nexport { watchCompanies };\n","import { all } from 'redux-saga/effects';\nimport watchProducts from './productSaga';\nimport { watchCompanies } from './companySaga';\n\nexport default function* rootSaga() {\n  yield all([watchProducts(), watchCompanies()]);\n}\n","import {\n  GET_COMPANIES,\n  COMPANIES_FAILED,\n  COMPANIES_RECEIVED,\n} from '../constants';\n\nexport const companyReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case GET_COMPANIES:\n      return { ...state, loading: true };\n    case COMPANIES_RECEIVED:\n      return { ...state, companies: action.companies, loading: false };\n    case COMPANIES_FAILED:\n      return { ...state, message: action.message, loading: false };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { companyReducer } from './companyReducer';\nimport { productReducer } from './productReducer';\nimport { pageReducer } from './pageReducer';\nimport { sortReducer } from './sortReducer';\nimport { brandReducer } from './brandReducer';\nimport { tagReducer } from './tagReducer';\nimport { orderReducer } from './orderReducer';\nimport { itemTypeReducer } from './itemTypeReducer';\n\nimport { IInitialState } from '../types';\n\nconst appReducer = combineReducers({\n  companyReducer,\n  productReducer,\n  tagReducer,\n  sortReducer,\n  brandReducer,\n  pageReducer,\n  orderReducer,\n  itemTypeReducer,\n});\n\nconst initialState = {\n  orderReducer: { orders: [] },\n  tagReducer: { tags: [] },\n  productReducer: { products: [] },\n  companyReducer: { companies: [] },\n  brandReducer: { brands: [] },\n  sortReducer: { sort: '' },\n  pageReducer: { page: 0 },\n  itemTypeReducer: { itemType: '' },\n};\n/**\n * Handles all state\n *\n * @param {object} state - application state\n * @param {object} action - contains what to do\n *\n * @returns {object} new state\n */\nexport const rootReducer = (\n  state: Readonly<IInitialState> = initialState,\n  action: any,\n  //@ts-ignore\n) => appReducer(state, action);\n","import { GET_PRODUCTS, PRODUCTS_RECEIVED, PRODUCTS_FAILED } from '../constants';\n\nexport const productReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case GET_PRODUCTS:\n      return { ...state, loading: true };\n    case PRODUCTS_RECEIVED:\n      return {\n        ...state,\n        products: action.products,\n        count: action.count,\n        loading: false,\n      };\n    case PRODUCTS_FAILED:\n      return { ...state, message: action.message, loading: false };\n    default:\n      return state;\n  }\n};\n","import { SET_TAGS, SET_ALL_TAGS } from '../constants';\n\nexport const tagReducer = (state = { tags: [] }, action: any) => {\n  switch (action.type) {\n    case SET_TAGS: {\n      if (state.tags.length === 0) {\n        return { ...state, tags: [action.tag] };\n      }\n      //@ts-ignore\n      if (state.tags.includes('All')) {\n        return { ...state, tags: [] };\n      }\n      //@ts-ignore\n      if (state.tags.includes(action.tag)) {\n        const filteredTags = state.tags.filter((tag) => tag !== action.tag);\n        return { ...state, tags: filteredTags };\n      }\n      return { ...state, tags: [...state.tags, action.tag] };\n    }\n\n    case SET_ALL_TAGS: {\n      if (state.tags.length === action.tags.length) {\n        return { ...state, tags: [] };\n      }\n\n      return { ...state, tags: [...action.tags] };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { SET_SORT } from '../constants';\n\nexport const sortReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case SET_SORT:\n      return { ...state, sort: action.sort };\n\n    default:\n      return state;\n  }\n};\n","import { SET_BRANDS, SET_ALL_BRANDS } from '../constants';\n\nexport const brandReducer = (state = { brands: [] }, action: any) => {\n  switch (action.type) {\n    case SET_BRANDS: {\n      if (state.brands.length === 0) {\n        return { ...state, brands: [action.brand] };\n      }\n      //@ts-ignore\n      if (state.brands.includes('All')) {\n        return { ...state, brands: [] };\n      }\n      //@ts-ignore\n      if (state.brands.includes(action.brand)) {\n        const filteredBrands = state.brands.filter(\n          (brand) => brand !== action.brand,\n        );\n        return { ...state, brands: filteredBrands };\n      }\n      return { ...state, brands: [...state.brands, action.brand] };\n    }\n\n    case SET_ALL_BRANDS: {\n      if (state.brands.length === action.brands.length) {\n        return { ...state, brands: [] };\n      }\n      return { ...state, brands: [...action.brands] };\n    }\n\n    default:\n      return state;\n  }\n};\n","import { SET_PAGE_NUMBER } from '../constants';\n\nexport const pageReducer = (state = {}, action: any) => {\n  switch (action.type) {\n    case SET_PAGE_NUMBER:\n      return { ...state, page: action.page };\n\n    default:\n      return state;\n  }\n};\n","import { INCREMENT_ORDER, SET_ORDER, DECREMENT_ORDER } from '../constants';\n\nimport { IOrder } from '../types';\nimport compact from 'lodash.compact';\n\nexport const orderReducer = (state = { orders: [] }, action: any) => {\n  switch (action.type) {\n    case SET_ORDER:\n      return { ...state, orders: [...state?.orders, action.order] };\n\n    case INCREMENT_ORDER: {\n      const orders = state.orders.map((order: IOrder) => {\n        if (order.slug === action.order.slug) {\n          return {\n            slug: order.slug,\n            name: order.name,\n            count: order.count! + 1,\n            price: order.price,\n          };\n        }\n        return order;\n      });\n      return { ...state, orders };\n    }\n\n    case DECREMENT_ORDER: {\n      const orders = state.orders.map((order: IOrder) => {\n        if (order.slug === action.order.slug) {\n          if (action.order.count! === 1) return;\n          return {\n            slug: order.slug,\n            name: order.name,\n            count: order.count! - 1,\n            price: order.price,\n          };\n        }\n        return order;\n      });\n      return { ...state, orders: compact(orders) };\n    }\n    default:\n      return state;\n  }\n};\n","import { SET_ITEM_TYPE } from '../constants';\n\nexport const itemTypeReducer = (state = { itemType: '' }, action: any) => {\n  switch (action.type) {\n    case SET_ITEM_TYPE:\n      return { ...state, itemType: action.itemType };\n\n    default:\n      return state;\n  }\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from '../sagas';\nimport { rootReducer } from '../reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\nsagaMiddleware.run(rootSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}